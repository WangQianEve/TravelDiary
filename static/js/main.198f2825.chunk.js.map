{"version":3,"sources":["Item.js","Memories.js","Guide.js","Map.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Item","_this","this","react_default","a","createElement","className","onClick","e","props","handler","cid","title","src","imgUrl","alt","Component","Memories","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","detail","openDetail","id","state","d","_this2","elements","elements_id","i","items","length","item","labels","filter","value","indexOf","city","push","src_Item_0","key","image","current","Modal_default","disableAutoFocus","open","onClose","ChevronLeft_default","changeDetail","description","LocationOn_default","CalendarToday_default","time","ChevronRight_default","Guide","sections","section_names","summary","map","geojson","require","Mapbox","ReactMapboxGl","accessToken","circleLayout","visibility","circlePaint","circle-color","circle-radius","property","type","stops","circle-opacity","symbolLayout","text-field","text-font","text-offset","text-anchor","symbolPaint","text-color","Map","mgeojson","features","place","style","containerStyle","height","width","zoom","center","onStyleLoad","lib","data","circleOnClick","onClickCircle","ListItemLink","ListItem_default","assign","button","component","Navbar","href","List_default","page","Scrollspy_default","currentClassName","role","undefined","dense","handleLabels","Checkbox_default","color","checked","tabIndex","disableRipple","App","currentIndex","newChecked","toConsumableArray","splice","handleNav","handleMap","options","cityNames","src_Memories_0","src_Guide_0","buttons","bind","ref","divElement","src_Map_0","src_Navbar_0","renderPageView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.198f2825.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Item.css';\n\n\nclass Item extends Component{\n    render() {\n        return (\n            <div className=\"mem-item\" onClick={(e) => this.props.handler(this.props.cid)}>\n                <div className=\"mem-title\">{this.props.title}</div>\n                <img className=\"mem-image\" src={this.props.imgUrl} alt={''}/>\n            </div>\n        );\n    }\n}\n\n\nexport default Item;","import React, { Component } from 'react';\nimport './App.css';\nimport './Memories.css';\nimport Item from './Item'\nimport Modal from '@material-ui/core/Modal';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport items from './memory'\n\nclass Memories extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            detail: -1,\n        };\n        var imgurl = \"https://lh3.googleusercontent.com/H35S0GFNT9BR_h_YI8JW3DnWgEHaJIvgcc6XE5yavTDqNLmmR6Rh9omln8Vr6QYM7-oKiUQ1Ocb-SEwmx0JvIpp4U-oZLMHNxJ45TtTjpNxibbMpSX9J1I4rRButXIso7aZcAzCifnWlAiXzylidvw2DmV22LEKq2-6nyMsHVIhmkg2i8cTMC9MdfkrjR0Td6k8WGmkLuwSiCjL2d1Zly7d2-9fd40xzORD9Mn5m_nDF6VFlLo2HJYGSxjxW8gOD3WI93AxzqelgR1lXGXqwUv1316D_5O_025CINjBW8zTJrQsZQ1q93s83jMZip93Nqs51Dz-3uyeANv6TCUYFOtCzNhqscTIkswRt666pOwFLeJ6NYQUqKQmgbPSc4L0JPf5Ek4bJDDdu8C6M7tsXeLI8v9L03v7pgo52-wz6cEyIxNVh95fA4SKfzOlgPQqwwPYJlOEaLuPODRB1hRRzR-cqFpyh7-dUwopa84NfdTemWf4EaBgPP8HrLb8rDqZPXsPoi-X9N8ZZBaubS4_5lE1iN6-7Fl3yJ7Gs78b4IsEk9XPHuxUC1QnAzgY5nqFpgcJAk89-Hhzh6ID6uMrBAnP4vEmMsyioHMU1zW33cthGOX2DU2sFmdv1=w1862-h1396-no\";\n    }\n\n    handleClose = () => {\n        this.setState({ detail: -1 });\n    };\n\n    changeDetail (d) {\n        this.setState({ detail: this.state.detail + d });\n    };\n\n    openDetail = (id, e) => {\n        this.setState({ detail: id });\n    };\n\n    render() {\n        var elements = [];\n        var elements_id = [];\n        var cid = 0;\n        for(var i=0; i < items.length; i++)\n        {\n            var item = items[i];\n            var common = item.labels.filter(value => -1 !== this.props.labels.indexOf(value));\n            if (common.length > 0 && (item.city === this.props.city || this.props.city === 'all')) {\n                elements.push(<Item key={cid} imgUrl={item.image} title={item.title} handler={this.openDetail} cid={cid}/>);\n                elements_id.push(i);\n                cid += 1;\n            }\n        }\n        var current = items[0];\n        if (this.state.detail >= 0) {\n            current = items[elements_id[this.state.detail]];\n        }\n        return (\n            <div className=\"Mem\">\n                {elements}\n                <Modal\n                    disableAutoFocus={true}\n                    className='Modal'\n                    open={this.state.detail >= 0}\n                    onClose={this.handleClose}\n                >\n                    <div id = 'modal'>\n                        <ChevronLeft className='Arrows' onClick={(e) => this.changeDetail(this.state.detail===0?0:-1)}/>\n                        <div id='modal-card'>\n                            <h3>{current.title}</h3>\n                            <p>{current.description}</p>\n                            <div id='detail_img'><img src={current.image} alt={''}/></div>\n                            <div id='location'>\n                                <LocationOn/>\n                                <h5>{current.city}</h5>\n                                <CalendarToday/>\n                                <h5>{current.time}</h5>\n                            </div>\n                        </div>\n                        <ChevronRight className='Arrows' onClick={(e) => this.changeDetail(this.state.detail>=(elements.length-1)?0:1)}/>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Memories;\n","import React, { Component } from 'react';\nimport './App.css';\nimport './Guide.css';\nimport summary from './summary.json';\n\nclass Guide extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var sections = ['Introduction', 'What we did', 'What we ate', 'Weather', 'Cost', 'Transportation', 'Other Tips'];\n        var section_names = ['introduction', 'things', 'foods', 'weather', 'cost', 'transportation', 'tips'];\n        var elements = [];\n        for (var i=0; i<sections.length; ++i) {\n            var current = summary[this.props.city];\n            elements.push(\n                <section id={'section-'+i}>\n                    <h3>{sections[i]}</h3>\n                    <div className='content'>\n                        {i===(sections.length-1)?current[section_names[i]].map(value => (<p>{value}</p>)):<p>{current[section_names[i]]}</p>}\n                    </div>\n                </section>\n            );\n        }\n        return (\n            <div className='Guide'>\n                {elements}\n            </div>\n        );\n    }\n}\n\nexport default Guide;\n","import React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature, GeoJSONLayer } from \"react-mapbox-gl\";\nimport './App.css';\nimport './Map.css';\nimport * as MapboxGL from 'mapbox-gl';\n\nconst TOKEN = 'pk.eyJ1IjoicWlhbi13YW5nIiwiYSI6ImNqZzF6eDk5MzE4dnAzM283bDFod2dtd3YifQ.02lGEEiPWoekKQabkgQlEg';\nconst geojson = require('./geojson.json');\nconst Mapbox = ReactMapboxGl({ accessToken: TOKEN });\n\nconst circleLayout: MapboxGL.CircleLayout = { visibility: 'visible' };\nconst circlePaint: MapboxGL.CirclePaint = {\n    'circle-color': 'white',\n    'circle-radius': {\n        property: 'days',\n        type: 'exponential',\n        stops: [\n            [1, 5],\n            [4, 12]\n        ]\n    },\n    'circle-opacity': 0.8\n};\nconst symbolLayout: MapboxGL.SymbolLayout = {\n    'text-field': '{name}',\n    'text-font': ['Open Sans Semibold Italic', 'Arial Unicode MS Bold'],\n    'text-offset': [0,0.6],\n    'text-anchor': 'top'\n};\nconst symbolPaint: MapboxGL.SymbolPaint = {\n    'text-color': 'white'\n};\n\nclass Map extends Component {\n    render() {\n        var mgeojson = {\n            type: 'FeatureCollection',\n            features: []\n        };\n        if (0===this.props.place) {\n            mgeojson = geojson;\n        } else {\n            for (var i=0; i < geojson.features.length; ++i) {\n                if ((this.props.place===1 && i===3) ||\n                    (this.props.place===2 && i===4) ||\n                    (this.props.place>=3 && this.props.place<=4 && i===2) ||\n                    (this.props.place>=5 && this.props.place<=7 && i===1) ||\n                    (this.props.place===8 && i===0)\n                ){\n                    mgeojson.features.push(geojson.features[i]);\n                    break;\n                }\n            }\n        }\n        return (\n            <Mapbox\n                className='Map'\n                style=\"mapbox://styles/mapbox/dark-v9\"\n                containerStyle={{\n                    height: \"100%\",\n                    width: \"200%\"\n                }}\n                zoom={[3.3]}\n                center={[50, 40]}\n                onStyleLoad={this.onStyleLoad}\n            >\n                <GeoJSONLayer\n                    data={mgeojson}\n                    circleLayout={circleLayout}\n                    circlePaint={circlePaint}\n                    circleOnClick={this.onClickCircle}\n                    symbolLayout={symbolLayout}\n                    symbolPaint={symbolPaint}\n                />\n            </Mapbox>\n        );\n    }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport './App.css';\nimport './Navbar.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Scrollspy from 'react-scrollspy'\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n}\n\nclass Navbar extends Component {\n    render() {\n        var sections = ['Introduction', 'What we did', 'What we ate', 'Weather', 'Cost', 'Transportation', 'Other Tips'];\n        var section_names = [];\n        var elements = [];\n        for (var i=0; i<sections.length; ++i) {\n            elements.push(\n                <ListItemLink key={i} className='ListItemLink' href={\"#section-\"+i}>\n                    {sections[i]}\n                </ListItemLink>\n            );\n            section_names.push(\"section-\"+i);\n        }\n        return (\n            <div>\n                <List component=\"nav\" id='nav' >\n                    <ListItem id={this.props.page===0? 'activeSection':'selection'} button onClick={(e) => this.props.handler(0)}>\n                        Summary\n                    </ListItem>\n                    { this.props.page === 0 ? (\n                        <Scrollspy items={ section_names } currentClassName=\"is-current\">\n                            {elements}\n                        </Scrollspy>\n                    ) : null}\n                    <ListItem id={this.props.page===1? 'activeSection':'selection'} button onClick={(e) => this.props.handler(1)}>\n                        Memories\n                    </ListItem>\n                    { this.props.page === 1 ? (\n                        <List component=\"div\">\n                            {['foods', 'things', 'places', 'personal'].map(value => (\n                                <ListItem className='ListItem' key={value} role={undefined} dense button onClick={this.props.handleLabels(value)}>\n                                    <Checkbox\n                                        color='default'\n                                        checked={this.props.checked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                    />\n                                    {value}\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : null}\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Memories from './Memories'\nimport Guide from './Guide'\nimport Map from './Map'\nimport Navbar from './Navbar'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            place: 0,\n            checked: ['foods', 'things', 'places'],\n        };\n        this.options = ['All -', '- Athens -', '- Santorini -', '- Rome -', '- Vatican -', '- Nice -', '- Eze -', '- Monaco -', '- Barcelona'];\n        this.cityNames = ['all', 'athens', 'santorini', 'rome', 'vatican', 'nice', 'eze', 'monaco', 'barcelona'];\n    }\n\n    handleLabels = value => () => {\n        const {checked} = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked,\n        });\n    };\n\n    renderPageView() {\n        if (this.state.page === 1)\n            return <Memories labels={this.state.checked} city={this.cityNames[this.state.place]}/>;\n        if (this.state.page === 0)\n            return <Guide city={this.cityNames[this.state.place]}/>;\n    }\n\n    handleNav = (id, e) => {\n        this.setState({page: id});\n    };\n\n    handleMap = (value, e) => {\n        this.setState({place: value});\n    };\n\n    render() {\n        var buttons = [];\n        for (var i = 0; i < this.options.length; i++) {\n            if (this.state.place === i) {\n                buttons.push(<p id='selected' onClick={this.handleMap.bind(this, i)}>{this.options[i]}</p>);\n            } else {\n                buttons.push(<p onClick={this.handleMap.bind(this, i)}>{this.options[i]}</p>);\n            }\n        }\n        return (\n            <div className=\"App\">\n                <div id=\"mapNav\">\n                    <p id='title'>North To Mediterranean</p>\n                    {buttons}\n                </div>\n                <div className=\"App-header\" ref={(divElement) => this.divElement = divElement}>\n                    <Map place={this.state.place}/>\n                </div>\n                <div className=\"App-content\">\n                    <div className=\"App-filter\">\n                        <Navbar page={this.state.page} handler={this.handleNav} handleLabels={this.handleLabels}\n                                checked={this.state.checked}/>\n                    </div>\n                    <div className=\"App-main-content\">\n                        {this.renderPageView()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}